name: 'lowdefy-example-case-management'
lowdefy: '3.15.0'
licence: MIT

connections:
  - id: buildings
    type: MongoDBCollection
    properties:
      databaseUri:
        _secret: MDB
      databaseName: facilities
      collection: buildings
      read: true
      write: true
  - id: staff_register
    type: MongoDBCollection
    properties:
      databaseUri:
        _secret: MDB
      databaseName: facilities
      collection: staff_register
      read: true
      write: true
  - id: staff_attendance
    type: MongoDBCollection
    properties:
      databaseUri:
        _secret: MDB
      databaseName: facilities
      collection: staff_attendance
      read: true
      write: true    
  - id: tickets
    type: MongoDBCollection
    properties:
      databaseUri:
        _secret: MDB
      databaseName: facilities
      collection: tickets
      write: true
  - id: properties
    type: MongoDBCollection
    properties: 
      databaseUri:
        _secret: MDB
      databaseName: TOLMAYVANWYK
      collection: GRENTON_PROPERTIES
      write: true

menus:
  - id: blockid
    links:
      - id: newuser
        type: MenuLink
        pageId: new-user-welcome
        properties:
          icon: AlertOutlined
          title: Welcome
           
      - id: staff-page
        type: MenuLink
        pageId: staff-page
        properties:
          icon: ProfileFilled
          title: Staff Page 
      - id: tickets
        type: MenuLink
        pageId: tickets
        properties:
          icon: ProfileOutlined
          title: Tickets  
      - id: new-ticket
        type: MenuLink
        pageId: new-ticket
        properties:
          icon: AlertOutlined
          title: New Ticket
      - id: newproperty
        type: MenuLink
        pageId: new-property
        properties:
          icon: HomeOutlined
          title: New Property
      - id: covidmenu
        type: MenuLink
        pageId: covidcapture
        properties:
          icon: MedicineBoxFilled
          title: Covid Capture Form


global:
  statuses:
    - Investigation Started
    - Client Contacted
    - Awaiting Confirmation

  # Maps of colors and icons for statuses and actions
  statusColors:
    New: '#722ed1'
    Investigation Started: '#1890ff'
    Client Contacted: '#13c2c2'
    Awaiting Confirmation: '#7cb305'
    Escalated: '#faad14'
    Closed: '#bfbfbf'

  actionColors:
    Created: '#722ed1'
    Changed status to Investigation Started: '#1890ff'
    Changed status to Client Contacted: '#13c2c2'
    Changed status to Awaiting Confirmation: '#7cb305'
    Escalated: '#faad14'
    Flagged: '#f5222d'
    Removed flag: '#bfbfbf'
    Commented: '#bfbfbf'
    Closed: '#52c41a'

  statusIcons:
    New: PlusCircleTwoTone
    Escalated: ExclamationCircleOutlined
    Investigation Started: ToolTwoTone
    Client Contacted: SoundTwoTone
    Awaiting Confirmation: LikeOutlined
    Closed: StopOutlined

  actionIcons:
    Created: PlusCircleTwoTone
    Changed status to Investigation Started: ToolTwoTone
    Changed status to Client Contacted: SoundTwoTone
    Changed status to Awaiting Confirmation: LikeOutlined
    Escalated: ExclamationCircleOutlined
    Flagged: FlagTwoTone
    Removed flag: FlagTwoTone
    Commented: MessageTwoTone
    Closed: StopOutlined

pages:
  - _ref: tickets.yaml
  - _ref: new-ticket.yaml
  - _ref: visitors-covid-form.yaml
  - _ref: new-user-welcome.yaml
  - _ref: new-property.yaml
  - _ref: staff-page.yaml
  - id: new
    type: PageHeaderMenu
    properties:
      a: 
        _log:
          _state: true

    requests:
      - id: get_buildings
        type: MongoDBAggregation
        connectionId: buildings
        properties:
          pipeline:
            - $match: {}
      - id: get_total
        type: MongoDBAggregation
        connectionId: buildings
        properties:
          pipeline:
            - $group:
                _id: 0
                total_price: 
                  $sum: $price 
      - id: save_item
        type: MongoDBInsertOne
        connectionId: buildings
        properties:
          doc:
            price:
              _state: price
            name:
              _state: name
    events:
      onEnter:
        - id: get_data
          type: Request
          params: 
            - get_buildings
            - get_total
        - id: set_it
          type: SetState
          params:
            req:
              _request: get_buildings
    blocks:
      - id: heading
        type: Title
        properties:
          content: Hello new page
      - id: form  
        type: Card
        blocks:
          - id: name
            type: TextInput
            required: true
            properties:
              title: Name of stock item
          - id: price 
            type: NumberInput
            required: true
            properties:
              title: How much does this cost?
          - id: Save
            type: Button
            events:
              onClick:
                - id: save_data
                  type: Request
                  params: save_item
                - id: get_data
                  type: Request
                  params: 
                    - get_buildings
                    - get_total
      - id: show_data
        type: Markdown
        properties:
          content: 
            _nunjucks:
              template: |
                ### {{ title }} with total R {{ total }}

                {% for item in data %}- {{ item.name }} = R {{ (item.price or 0).toFixed(2) }}
                {% endfor %}
              on:
                title: All my data
                total:
                  _get:
                    key: 0.total_price
                    from:
                      _request: get_total
                data:
                  _request: get_buildings
      







